# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build Pipeline

on:          
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/**'
      - 'version.txt'  
  workflow_dispatch: 

jobs:
  set-version:
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:        
          ref: ${{ github.ref }}  
       
      - run: echo The tags is ${{ github.sha }}
      - run: | 
            var_date=$(date '+%Y%m%d')
            echo var_date=${var_date}
            echo "VERSION_NO=${var_date}-${GITHUB_RUN_NUMBER} " >> $GITHUB_ENV  
      
      - run: echo VERSION_NO=${VERSION_NO}
      - run: echo ${VERSION_NO} > version.txt
      - run: ls -la
      
      - name: Commit version files
        run: |          
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add version.txt
          git commit -m "update version to be ${VERSION_NO}"
          
      - name: Push version changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}  
          
  build-container:   

    runs-on: ubuntu-latest
    needs: [set-version]
    environment: testing

    steps:
    - uses: actions/checkout@v2    
    
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        catch: maven

    - name: Get Version
      run: |
        var_version=$(cat version.txt)
        echo "VERSION_NO=${var_version}" >> $GITHUB_ENV
        echo "Version is ${{ env.VERSION_NO }}"
        
    - name: Build with Maven
      run: mvn -B package -Pcoverage
          
    - name: Generate JaCoCo badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        badges-directory: badges
        generate-branches-badge: true
        generate-summary: true

    - name: Log coverage percentages to workflow output
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branches = ${{ steps.jacoco.outputs.branches }}"

    - name: Upload JaCoCo coverage report as a workflow artifact
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/

    #- name: Commit and push the coverage badges and summary file
    #  if: ${{ github.event_name != 'pull_request' }}
    #  run: |
    #    cd badges
    #    if [[ `git status --porcelain *.svg *.json` ]]; then
    #      git config --global user.name 'github-actions'
    #      git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
    #      git add *.svg *.json
    #      git commit -m "Autogenerated JaCoCo coverage badges" *.svg *.json
    #      git push
    #    fi

    - name: Comment on PR with coverage percentages
      #if: ${{ github.event_name == 'pull_request' }}
      run: |
        REPORT=$(<badges/coverage-summary.json)
        COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
        BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
        NEWLINE=$'\n'
        BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
        gh pr comment ${{ github.sha }} -b "${BODY}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          


        
    
